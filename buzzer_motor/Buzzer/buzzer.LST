C51 COMPILER V9.02   BUZZER                                                                04/13/2019 02:18:55 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE BUZZER
OBJECT MODULE PLACED IN buzzer.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE buzzer.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg52.h>
   2          
   3          sbit KEY_IN_1 = P2^4;
   4          sbit KEY_IN_2 = P2^5;
   5          sbit KEY_IN_3 = P2^6;
   6          sbit KEY_IN_4 = P2^7;
   7          sbit KEY_OUT_1 = P2^3;
   8          sbit KEY_OUT_2 = P2^2;
   9          sbit KEY_OUT_3 = P2^1;
  10          sbit KEY_OUT_4 = P2^0;
  11          
  12          unsigned char code KeyCodeMap[4][4]={
  13                  {0x31,0x32,0x33,0x26},
  14                  {0x34,0x35,0x36,0x25},
  15                  {0x37,0x38,0x39,0x28},
  16                  {0x30,0x1B,0x0D,0x27}
  17          
  18          };
  19          
  20          unsigned char KeySta[4][4]={
  21                  {1,1,1,1},{1,1,1,1},{1,1,1,1},{1,1,1,1}
  22          };
  23          
  24          signed long beats=0;
  25          
  26          void KeyDriver();
  27          
  28          void main(){
  29   1              EA=1;
  30   1              TMOD=0x01;
  31   1              TH0=0xFC;
  32   1              TL0=0x67;
  33   1              TR0=1;
  34   1              ET0=1;
  35   1              while(1){
  36   2                      KeyDriver();
  37   2              }
  38   1      }
  39          
  40          void StartMotor(signed long angle){
  41   1              EA=0;
  42   1              beats=(angle*4076)/360;
  43   1              EA=1;
  44   1      }
  45          
  46          void StopMotor(){
  47   1              EA=0;
  48   1              beats=0;
  49   1              EA=1;
  50   1      }
  51          
  52          void KeyGet(unsigned char keycode){
  53   1              static bit dir=0;
  54   1              static signed int addend=0;
  55   1      
C51 COMPILER V9.02   BUZZER                                                                04/13/2019 02:18:55 PAGE 2   

  56   1              if (keycode>=0x30 && keycode<=0x39){
  57   2      
  58   2                      addend=(addend*10)+(keycode-0x30);
  59   2              }else if (keycode==0x26){
  60   2                      dir=0;
  61   2              }else if (keycode==0x28){
  62   2                      dir=1;
  63   2              }else if (keycode==0x25){
  64   2                      StartMotor(90);
  65   2              }else if (keycode==0x27){
  66   2                      StartMotor(-90);
  67   2              }else if (keycode==0x0D){
  68   2                      if (dir==0){
  69   3                              StartMotor(addend*360);
  70   3                      }else{
  71   3                              StartMotor(-360*addend);
  72   3                      }
  73   2                      addend=0;
  74   2              }else if (keycode==0x1B){
  75   2                      StopMotor();
  76   2                      addend=0;
  77   2              }
  78   1      }
  79          
  80          void KeyDriver(){
  81   1              unsigned char i,j;
  82   1              static unsigned char backup[4][4]={
  83   1                      {1,1,1,1},{1,1,1,1},{1,1,1,1},{1,1,1,1}
  84   1              };
  85   1      
  86   1              for (i=0;i<4;i++){
  87   2                      for (j=0;j<4;j++){
  88   3                              if (backup[i][j]!=KeySta[i][j]){
  89   4                                      if (backup[i][j]!=0){
  90   5                                              KeyGet(KeyCodeMap[i][j]);
  91   5                                      }
  92   4                                      backup[i][j]=KeySta[i][j];
  93   4                              }
  94   3                      }
  95   2              }
  96   1      }
  97          
  98          
  99          void KeyScan(){
 100   1              unsigned char i;
 101   1              static unsigned char keyout=0;
 102   1              static unsigned char keybuf[4][4]={
 103   1                      {0xFF,0xFF,0xFF,0xFF},{0xFF,0xFF,0xFF,0xFF},
 104   1                      {0xFF,0xFF,0xFF,0xFF},{0xFF,0xFF,0xFF,0xFF}
 105   1              };
 106   1      
 107   1              keybuf[keyout][0]=(keybuf[keyout][0]<<1) | KEY_IN_1;
 108   1              keybuf[keyout][1]=(keybuf[keyout][1]<<1) | KEY_IN_2;
 109   1              keybuf[keyout][2]=(keybuf[keyout][2]<<1) | KEY_IN_3;
 110   1              keybuf[keyout][3]=(keybuf[keyout][3]<<1) | KEY_IN_4;
 111   1      
 112   1              for (i=0;i<4;i++){
 113   2                      if ((keybuf[keyout][i] & 0x0F)== 0x00){
 114   3                              KeySta[keyout][i]=0;
 115   3                      }else if ((keybuf[keyout][i] & 0x0F)== 0x0F){
 116   3                              KeySta[keyout][i]=1;
 117   3                      }
C51 COMPILER V9.02   BUZZER                                                                04/13/2019 02:18:55 PAGE 3   

 118   2              }
 119   1      
 120   1              keyout++;
 121   1              keyout=keyout & 0x03;
 122   1              switch(keyout){
 123   2                      case 0: KEY_OUT_4=1; KEY_OUT_1=0; break;
 124   2                      case 1: KEY_OUT_1=1; KEY_OUT_2=0; break;
 125   2                      case 2: KEY_OUT_2=1; KEY_OUT_3=0; break;
 126   2                      case 3: KEY_OUT_3=1; KEY_OUT_4=0; break;
 127   2                      default: break;
 128   2              }
 129   1      }
 130          
 131          void TurnMotor(){
 132   1              unsigned char tmp;
 133   1              static unsigned char index=0;
 134   1              unsigned char code BeatCode[8]={
 135   1                      0xE,0xC,0xD,0x9,0xB,0x3,0x7,0x6
 136   1              };
 137   1      
 138   1              if (beats!=0){
 139   2                      if (beats>0){
 140   3                              index++;
 141   3                              index=index & 0x07;
 142   3                              beats--;
 143   3                      }else if (beats<0){
 144   3                              index--;
 145   3                              index=index& 0x07;
 146   3                              beats++;
 147   3                      }
 148   2                      tmp=P1;
 149   2                      tmp=tmp & 0xF0;
 150   2                      tmp= tmp | BeatCode[index];
 151   2                      P1=tmp;
 152   2              }else{
 153   2                      P1=P1 | 0x0F;   
 154   2              }
 155   1      
 156   1      }
 157          
 158          void InterruptTimer0() interrupt 1{
 159   1              static bit div=0;
 160   1              TH0=0xFC;
 161   1              TL0=0x67;
 162   1              KeyScan();
 163   1      
 164   1              div= ~div;
 165   1              if (div==1){
 166   2                      TurnMotor();
 167   2              }
 168   1      
 169   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    746    ----
   CONSTANT SIZE    =     24    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     56       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
C51 COMPILER V9.02   BUZZER                                                                04/13/2019 02:18:55 PAGE 4   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
