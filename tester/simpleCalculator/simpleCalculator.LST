C51 COMPILER V9.02   SIMPLECALCULATOR                                                      03/26/2019 16:28:33 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE SIMPLECALCULATOR
OBJECT MODULE PLACED IN simpleCalculator.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE simpleCalculator.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg52.h>
   2          #include <stdlib.h>
   3          
   4          sbit ADDR0=P1^0;
   5          sbit ADDR1=P1^1;
   6          sbit ADDR2=P1^2;
   7          sbit ADDR3=P1^3;
   8          sbit ENLED=P1^4;
   9          sbit KEY_IN_1=P2^4;
  10          sbit KEY_IN_2=P2^5;
  11          sbit KEY_IN_3=P2^6;
  12          sbit KEY_IN_4=P2^7;
  13          sbit KEY_OUT_1=P2^3;
  14          sbit KEY_OUT_2=P2^2;
  15          sbit KEY_OUT_3=P2^1;
  16          sbit KEY_OUT_4=P2^0;
  17          
  18          unsigned char code LedChar[]={
  19                          0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,
  20                          0x80,0x90,0x88,0x83,0xC6,0xA1,0x86,0x8E
  21          };
  22          
  23          unsigned char LedBuff[6]={
  24                          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
  25          };
  26          
  27          unsigned char code KeyCodeMap[4][4]={
  28                          {0x31,0x32,0x33,0x26},
  29                          {0x34,0x35,0x36,0x25},
  30                          {0x37,0x38,0x39,0x28},
  31                          {0x30,0x1B,0x0D,0x27}
  32          };
  33          
  34          unsigned char KeySta[4][4]={
  35                          {1,1,1,1},{1,1,1,1},{1,1,1,1},{1,1,1,1}
  36          };
  37          
  38          void KeyDriver();
  39          int calculate(unsigned char instruction,long result,long addend,bit first);
  40          
  41          void main(){
  42   1              EA=1;
  43   1              ADDR3=1;
  44   1              ENLED=0;
  45   1              TMOD=0x01;
  46   1              TH0=0xFC;
  47   1              TL0=0x67;
  48   1              TR0=1;
  49   1              ET0=1;
  50   1              LedBuff[0]=LedChar[0];
  51   1      
  52   1              while (1){
  53   2                      KeyDriver();
  54   2              }
  55   1      }
C51 COMPILER V9.02   SIMPLECALCULATOR                                                      03/26/2019 16:28:33 PAGE 2   

  56          
  57          void ShowNumber(long num){
  58   1              signed char i;
  59   1              unsigned char sign;
  60   1              unsigned char buf[6];
  61   1      
  62   1              if (num<0){
  63   2                      sign=1;
  64   2                      num=-num;
  65   2              }else{
  66   2                      sign=0;
  67   2              }
  68   1              for (i=0;i<6;i++){
  69   2                      buf[i]=num%10;
  70   2                      num=num/10;
  71   2              }
  72   1              for (i=5;i>=1;i--){
  73   2                      if (buf[i]==0){
  74   3                              LedBuff[i]=0xFF;
  75   3                      }else{
  76   3                              break;
  77   3                      }
  78   2              }
  79   1              if (sign!=0){
  80   2                      if (i<5){
  81   3                              LedBuff[i+1]=0xBF;
  82   3                      }
  83   2              }
  84   1              for ( ; i>=0;i--){
  85   2                      LedBuff[i]=LedChar[buf[i]];
  86   2              }
  87   1      }
  88          
  89          void KeyAction(unsigned char keycode){
  90   1              static long result=0;
  91   1              static long addend=0;
  92   1              static unsigned char instruction=0;
  93   1              static bit first=1;
  94   1      
  95   1              if (keycode>=0x30 && keycode<=0x39){                       // number input
  96   2                      addend=(addend*10) + (keycode-0x30);
  97   2                      ShowNumber(addend);
  98   2              }else if (keycode==0x26){                                                       // add
  99   2                      result=calculate(instruction,result,addend,first);
 100   2                      first=0;
 101   2                      addend=0;
 102   2                      instruction=0;
 103   2                      ShowNumber(result);
 104   2              }else if (keycode==0x28){                                                       // subtract
 105   2                      result=calculate(instruction,result,addend,first);
 106   2                      first=0;
 107   2                      addend=0;
 108   2                      instruction=1;
 109   2                      ShowNumber(result);             
 110   2              }else if (keycode==0x25){                                                       // multiplication
 111   2                      result=calculate(instruction,result,addend,first);
 112   2                      first=0;
 113   2                      addend=0;
 114   2                      instruction=2;
 115   2                      ShowNumber(result);                     
 116   2              }else if (keycode==0x27){                                                       // divide
 117   2                      result=calculate(instruction,result,addend,first);
C51 COMPILER V9.02   SIMPLECALCULATOR                                                      03/26/2019 16:28:33 PAGE 3   

 118   2                      first=0;
 119   2                      addend=0;
 120   2                      instruction=3;
 121   2                      ShowNumber(result);             
 122   2              }else if (keycode==0x0D){
 123   2                      result=calculate(instruction,result,addend,first);
 124   2                      first=0;
 125   2                      addend=0;
 126   2                      instruction=4;
 127   2                      ShowNumber(result);             
 128   2              }else if (keycode==0x1B){
 129   2                      first=1;
 130   2                      instruction=0;
 131   2                      addend=0;
 132   2                      result=0;
 133   2                      ShowNumber(addend);
 134   2              }
 135   1      }
 136          
 137          int calculate(unsigned char instruction,long result,long addend,bit first){
 138   1              if (first){
 139   2                      result+=addend;
 140   2                      return result;
 141   2              }
 142   1              switch(instruction){
 143   2                      case 0: result+=addend; break;
 144   2                      case 1: result-=addend; break;
 145   2                      case 2: result*=addend; break;
 146   2                      case 3: result=result/addend; break;
 147   2                      case 4: result=result;
 148   2                      default: break;
 149   2              }
 150   1      
 151   1              return result;
 152   1              
 153   1      }
 154          
 155          void KeyDriver(){
 156   1              unsigned char i,j;
 157   1              static unsigned char backup[4][4]={
 158   1                      {1,1,1,1},{1,1,1,1},{1,1,1,1},{1,1,1,1}
 159   1              };
 160   1              for (i=0;i<4;i++){
 161   2                      for (j=0;j<4;j++){
 162   3                              if (backup[i][j]!=KeySta[i][j]){
 163   4                                      if (backup[i][j]!=0){
 164   5                                              KeyAction(KeyCodeMap[i][j]);
 165   5                                      }
 166   4                                      backup[i][j]=KeySta[i][j];
 167   4                              }
 168   3                      }
 169   2              }
 170   1      }
 171          
 172          void KeyScan(){
 173   1              unsigned char i;
 174   1              static unsigned char keyout=0;
 175   1              static unsigned char keybuf[4][4]={
 176   1                      {0xFF,0xFF,0xFF,0xFF},{0xFF,0xFF,0xFF,0xFF},
 177   1                      {0xFF,0xFF,0xFF,0xFF},{0xFF,0xFF,0xFF,0xFF}
 178   1              };
 179   1      
C51 COMPILER V9.02   SIMPLECALCULATOR                                                      03/26/2019 16:28:33 PAGE 4   

 180   1              keybuf[keyout][0]=(keybuf[keyout][0]<<1) | KEY_IN_1;
 181   1              keybuf[keyout][1]=(keybuf[keyout][1]<<1) | KEY_IN_2;
 182   1              keybuf[keyout][2]=(keybuf[keyout][2]<<1) | KEY_IN_3;
 183   1              keybuf[keyout][3]=(keybuf[keyout][3]<<1) | KEY_IN_4;
 184   1      
 185   1              for (i=0;i<4;i++){
 186   2                      if ((keybuf[keyout][i] & 0x0F)==0x00){
 187   3                              KeySta[keyout][i]=0;
 188   3                      }else if ((keybuf[keyout][i] & 0x0F)==0x0F){
 189   3                              KeySta[keyout][i]=1;    
 190   3                      }
 191   2              }
 192   1              keyout++;
 193   1              keyout=keyout&0x03;
 194   1              switch(keyout){
 195   2                      case 0: KEY_OUT_4=1; KEY_OUT_1=0; break;
 196   2                      case 1: KEY_OUT_1=1; KEY_OUT_2=0; break;
 197   2                      case 2: KEY_OUT_2=1; KEY_OUT_3=0; break;
 198   2                      case 3: KEY_OUT_3=1; KEY_OUT_4=0; break;
 199   2                      default:break;
 200   2              }
 201   1              
 202   1      }
 203          
 204          void LedScan(){
 205   1              static unsigned char i=0;
 206   1              P0=0xFF;
 207   1              switch(i){
 208   2                      case 0: ADDR2=0; ADDR1=0; ADDR0=0; i++; P0=LedBuff[0]; break;
 209   2                      case 1: ADDR2=0; ADDR1=0; ADDR0=1; i++; P0=LedBuff[1]; break;
 210   2                      case 2: ADDR2=0; ADDR1=1; ADDR0=0; i++; P0=LedBuff[2]; break;
 211   2                      case 3: ADDR2=0; ADDR1=1; ADDR0=1; i++; P0=LedBuff[3]; break;
 212   2                      case 4: ADDR2=1; ADDR1=0; ADDR0=0; i++; P0=LedBuff[4]; break;
 213   2                      case 5: ADDR2=1; ADDR1=0; ADDR0=1; i=0; P0=LedBuff[5]; break;
 214   2                      default: break;
 215   2              }
 216   1      }
 217          
 218          void InterruptTimer0() interrupt 1{
 219   1              TH0=0xFC;
 220   1              TL0=0x67;
 221   1              LedScan();
 222   1              KeyScan();
 223   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1176    ----
   CONSTANT SIZE    =     32    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     65      24
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
